
syringe detection Dia Rising and Falling Edges.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00804000  00000d48  00000ddc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000033  00804032  00804032  00000e0e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e0e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e40  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003d28  00000000  00000000  00000f20  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000030ec  00000000  00000000  00004c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000733  00000000  00000000  00007d34  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000218  00000000  00000000  00008468  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001b10  00000000  00000000  00008680  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007db  00000000  00000000  0000a190  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  0000a96b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 c1 00 	jmp	0x182	; 0x182 <__ctors_end>
   4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
   8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
   c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  10:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  14:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  18:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  1c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  20:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  24:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  28:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  2c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  30:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  34:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  38:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  3c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  40:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  44:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  48:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  4c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  50:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  54:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  58:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  5c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  60:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  64:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  68:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  6c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  70:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  74:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <__vector_29>
  78:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  7c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  80:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  84:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  88:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  8c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  90:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  94:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  98:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  9c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  a0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  a4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  a8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  ac:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  b0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  b4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  b8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  bc:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  c0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  c4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  c8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  cc:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  d0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  d4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  d8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  dc:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  e0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  e4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  e8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  ec:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  f0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  f4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  f8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
  fc:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
 100:	07 63       	ori	r16, 0x37	; 55
 102:	42 36       	cpi	r20, 0x62	; 98
 104:	b7 9b       	sbis	0x16, 7	; 22
 106:	d8 a7       	std	Y+40, r29	; 0x28
 108:	1a 39       	cpi	r17, 0x9A	; 154
 10a:	68 56       	subi	r22, 0x68	; 104
 10c:	18 ae       	std	Y+56, r1	; 0x38
 10e:	ba ab       	std	Y+50, r27	; 0x32
 110:	55 8c       	ldd	r5, Z+29	; 0x1d
 112:	1d 3c       	cpi	r17, 0xCD	; 205
 114:	b7 cc       	rjmp	.-1682   	; 0xfffffa84 <__eeprom_end+0xff7efa84>
 116:	57 63       	ori	r21, 0x37	; 55
 118:	bd 6d       	ori	r27, 0xDD	; 221
 11a:	ed fd       	.word	0xfded	; ????
 11c:	75 3e       	cpi	r23, 0xE5	; 229
 11e:	f6 17       	cp	r31, r22
 120:	72 31       	cpi	r23, 0x12	; 18
 122:	bf 00       	.word	0x00bf	; ????
 124:	00 00       	nop
 126:	80 3f       	cpi	r24, 0xF0	; 240
 128:	08 00       	.word	0x0008	; ????
 12a:	00 00       	nop
 12c:	be 92       	st	-X, r11
 12e:	24 49       	sbci	r18, 0x94	; 148
 130:	12 3e       	cpi	r17, 0xE2	; 226
 132:	ab aa       	std	Y+51, r10	; 0x33
 134:	aa 2a       	or	r10, r26
 136:	be cd       	rjmp	.-1156   	; 0xfffffcb4 <__eeprom_end+0xff7efcb4>
 138:	cc cc       	rjmp	.-1640   	; 0xfffffad2 <__eeprom_end+0xff7efad2>
 13a:	4c 3e       	cpi	r20, 0xEC	; 236
 13c:	00 00       	nop
 13e:	00 80       	ld	r0, Z
 140:	be ab       	std	Y+54, r27	; 0x36
 142:	aa aa       	std	Y+50, r10	; 0x32
 144:	aa 3e       	cpi	r26, 0xEA	; 234
 146:	00 00       	nop
 148:	00 00       	nop
 14a:	bf 00       	.word	0x00bf	; ????
 14c:	00 00       	nop
 14e:	80 3f       	cpi	r24, 0xF0	; 240
 150:	00 00       	nop
 152:	00 00       	nop
 154:	00 08       	sbc	r0, r0
 156:	41 78       	andi	r20, 0x81	; 129
 158:	d3 bb       	out	0x13, r29	; 19
 15a:	43 87       	std	Z+11, r20	; 0x0b
 15c:	d1 13       	cpse	r29, r17
 15e:	3d 19       	sub	r19, r13
 160:	0e 3c       	cpi	r16, 0xCE	; 206
 162:	c3 bd       	out	0x23, r28	; 35
 164:	42 82       	std	Z+2, r4	; 0x02
 166:	ad 2b       	or	r26, r29
 168:	3e 68       	ori	r19, 0x8E	; 142
 16a:	ec 82       	std	Y+4, r14	; 0x04
 16c:	76 be       	out	0x36, r7	; 54
 16e:	d9 8f       	std	Y+25, r29	; 0x19
 170:	e1 a9       	ldd	r30, Z+49	; 0x31
 172:	3e 4c       	sbci	r19, 0xCE	; 206
 174:	80 ef       	ldi	r24, 0xF0	; 240
 176:	ff be       	out	0x3f, r15	; 63
 178:	01 c4       	rjmp	.+2050   	; 0x97c <__mulsf3_pse+0x72>
 17a:	ff 7f       	andi	r31, 0xFF	; 255
 17c:	3f 00       	.word	0x003f	; ????
 17e:	00 00       	nop
	...

00000182 <__ctors_end>:
 182:	11 24       	eor	r1, r1
 184:	1f be       	out	0x3f, r1	; 63
 186:	cf ef       	ldi	r28, 0xFF	; 255
 188:	cd bf       	out	0x3d, r28	; 61
 18a:	df e7       	ldi	r29, 0x7F	; 127
 18c:	de bf       	out	0x3e, r29	; 62

0000018e <__do_copy_data>:
 18e:	10 e4       	ldi	r17, 0x40	; 64
 190:	a0 e0       	ldi	r26, 0x00	; 0
 192:	b0 e4       	ldi	r27, 0x40	; 64
 194:	e8 e4       	ldi	r30, 0x48	; 72
 196:	fd e0       	ldi	r31, 0x0D	; 13
 198:	00 e0       	ldi	r16, 0x00	; 0
 19a:	0b bf       	out	0x3b, r16	; 59
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <__do_copy_data+0x14>
 19e:	07 90       	elpm	r0, Z+
 1a0:	0d 92       	st	X+, r0
 1a2:	a2 33       	cpi	r26, 0x32	; 50
 1a4:	b1 07       	cpc	r27, r17
 1a6:	d9 f7       	brne	.-10     	; 0x19e <__do_copy_data+0x10>

000001a8 <__do_clear_bss>:
 1a8:	20 e4       	ldi	r18, 0x40	; 64
 1aa:	a2 e3       	ldi	r26, 0x32	; 50
 1ac:	b0 e4       	ldi	r27, 0x40	; 64
 1ae:	01 c0       	rjmp	.+2      	; 0x1b2 <.do_clear_bss_start>

000001b0 <.do_clear_bss_loop>:
 1b0:	1d 92       	st	X+, r1

000001b2 <.do_clear_bss_start>:
 1b2:	a5 36       	cpi	r26, 0x65	; 101
 1b4:	b2 07       	cpc	r27, r18
 1b6:	e1 f7       	brne	.-8      	; 0x1b0 <.do_clear_bss_loop>
 1b8:	0e 94 bd 02 	call	0x57a	; 0x57a <main>
 1bc:	0c 94 a2 06 	jmp	0xd44	; 0xd44 <_exit>

000001c0 <__bad_interrupt>:
 1c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c4 <reverse>:
	while (!(USART1.STATUS & USART_RXCIF_bm))
	{
		;
	}
	return USART1.RXDATAL;
}
 1c4:	61 50       	subi	r22, 0x01	; 1
 1c6:	71 09       	sbc	r23, r1
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	30 e0       	ldi	r19, 0x00	; 0
 1cc:	0e c0       	rjmp	.+28     	; 0x1ea <reverse+0x26>
 1ce:	dc 01       	movw	r26, r24
 1d0:	a2 0f       	add	r26, r18
 1d2:	b3 1f       	adc	r27, r19
 1d4:	4c 91       	ld	r20, X
 1d6:	fc 01       	movw	r30, r24
 1d8:	e6 0f       	add	r30, r22
 1da:	f7 1f       	adc	r31, r23
 1dc:	50 81       	ld	r21, Z
 1de:	5c 93       	st	X, r21
 1e0:	40 83       	st	Z, r20
 1e2:	2f 5f       	subi	r18, 0xFF	; 255
 1e4:	3f 4f       	sbci	r19, 0xFF	; 255
 1e6:	61 50       	subi	r22, 0x01	; 1
 1e8:	71 09       	sbc	r23, r1
 1ea:	26 17       	cp	r18, r22
 1ec:	37 07       	cpc	r19, r23
 1ee:	7c f3       	brlt	.-34     	; 0x1ce <reverse+0xa>
 1f0:	08 95       	ret

000001f2 <intToStr>:
 1f2:	cf 92       	push	r12
 1f4:	df 92       	push	r13
 1f6:	ef 92       	push	r14
 1f8:	ff 92       	push	r15
 1fa:	0f 93       	push	r16
 1fc:	1f 93       	push	r17
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	8a 01       	movw	r16, r20
 204:	69 01       	movw	r12, r18
 206:	c0 e0       	ldi	r28, 0x00	; 0
 208:	d0 e0       	ldi	r29, 0x00	; 0
 20a:	11 c0       	rjmp	.+34     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
 20c:	78 01       	movw	r14, r16
 20e:	ec 0e       	add	r14, r28
 210:	fd 1e       	adc	r15, r29
 212:	2a e0       	ldi	r18, 0x0A	; 10
 214:	30 e0       	ldi	r19, 0x00	; 0
 216:	40 e0       	ldi	r20, 0x00	; 0
 218:	50 e0       	ldi	r21, 0x00	; 0
 21a:	0e 94 61 06 	call	0xcc2	; 0xcc2 <__divmodsi4>
 21e:	60 5d       	subi	r22, 0xD0	; 208
 220:	f7 01       	movw	r30, r14
 222:	60 83       	st	Z, r22
 224:	62 2f       	mov	r22, r18
 226:	73 2f       	mov	r23, r19
 228:	84 2f       	mov	r24, r20
 22a:	95 2f       	mov	r25, r21
 22c:	21 96       	adiw	r28, 0x01	; 1
 22e:	61 15       	cp	r22, r1
 230:	71 05       	cpc	r23, r1
 232:	81 05       	cpc	r24, r1
 234:	91 05       	cpc	r25, r1
 236:	51 f7       	brne	.-44     	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
 238:	06 c0       	rjmp	.+12     	; 0x246 <__EEPROM_REGION_LENGTH__+0x46>
 23a:	f8 01       	movw	r30, r16
 23c:	ec 0f       	add	r30, r28
 23e:	fd 1f       	adc	r31, r29
 240:	80 e3       	ldi	r24, 0x30	; 48
 242:	80 83       	st	Z, r24
 244:	21 96       	adiw	r28, 0x01	; 1
 246:	cc 15       	cp	r28, r12
 248:	dd 05       	cpc	r29, r13
 24a:	bc f3       	brlt	.-18     	; 0x23a <__EEPROM_REGION_LENGTH__+0x3a>
 24c:	be 01       	movw	r22, r28
 24e:	c8 01       	movw	r24, r16
 250:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <reverse>
 254:	f8 01       	movw	r30, r16
 256:	ec 0f       	add	r30, r28
 258:	fd 1f       	adc	r31, r29
 25a:	10 82       	st	Z, r1
 25c:	ce 01       	movw	r24, r28
 25e:	df 91       	pop	r29
 260:	cf 91       	pop	r28
 262:	1f 91       	pop	r17
 264:	0f 91       	pop	r16
 266:	ff 90       	pop	r15
 268:	ef 90       	pop	r14
 26a:	df 90       	pop	r13
 26c:	cf 90       	pop	r12
 26e:	08 95       	ret

00000270 <ftoa>:
 270:	8f 92       	push	r8
 272:	9f 92       	push	r9
 274:	af 92       	push	r10
 276:	bf 92       	push	r11
 278:	cf 92       	push	r12
 27a:	df 92       	push	r13
 27c:	ef 92       	push	r14
 27e:	ff 92       	push	r15
 280:	0f 93       	push	r16
 282:	1f 93       	push	r17
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	4b 01       	movw	r8, r22
 28a:	5c 01       	movw	r10, r24
 28c:	8a 01       	movw	r16, r20
 28e:	e9 01       	movw	r28, r18
 290:	0e 94 ab 03 	call	0x756	; 0x756 <__fixsfsi>
 294:	6b 01       	movw	r12, r22
 296:	77 0f       	add	r23, r23
 298:	ee 08       	sbc	r14, r14
 29a:	ff 08       	sbc	r15, r15
 29c:	c7 01       	movw	r24, r14
 29e:	b6 01       	movw	r22, r12
 2a0:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__floatsisf>
 2a4:	9b 01       	movw	r18, r22
 2a6:	ac 01       	movw	r20, r24
 2a8:	c5 01       	movw	r24, r10
 2aa:	b4 01       	movw	r22, r8
 2ac:	0e 94 cc 02 	call	0x598	; 0x598 <__subsf3>
 2b0:	4b 01       	movw	r8, r22
 2b2:	5c 01       	movw	r10, r24
 2b4:	20 e0       	ldi	r18, 0x00	; 0
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	a8 01       	movw	r20, r16
 2ba:	c7 01       	movw	r24, r14
 2bc:	b6 01       	movw	r22, r12
 2be:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <intToStr>
 2c2:	7c 01       	movw	r14, r24
 2c4:	20 97       	sbiw	r28, 0x00	; 0
 2c6:	49 f1       	breq	.+82     	; 0x31a <ftoa+0xaa>
 2c8:	f8 01       	movw	r30, r16
 2ca:	e8 0f       	add	r30, r24
 2cc:	f9 1f       	adc	r31, r25
 2ce:	8e e2       	ldi	r24, 0x2E	; 46
 2d0:	80 83       	st	Z, r24
 2d2:	be 01       	movw	r22, r28
 2d4:	0d 2e       	mov	r0, r29
 2d6:	00 0c       	add	r0, r0
 2d8:	88 0b       	sbc	r24, r24
 2da:	99 0b       	sbc	r25, r25
 2dc:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__floatsisf>
 2e0:	9b 01       	movw	r18, r22
 2e2:	ac 01       	movw	r20, r24
 2e4:	60 e0       	ldi	r22, 0x00	; 0
 2e6:	70 e0       	ldi	r23, 0x00	; 0
 2e8:	80 e2       	ldi	r24, 0x20	; 32
 2ea:	91 e4       	ldi	r25, 0x41	; 65
 2ec:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <pow>
 2f0:	9b 01       	movw	r18, r22
 2f2:	ac 01       	movw	r20, r24
 2f4:	c5 01       	movw	r24, r10
 2f6:	b4 01       	movw	r22, r8
 2f8:	0e 94 6f 04 	call	0x8de	; 0x8de <__mulsf3>
 2fc:	2f ef       	ldi	r18, 0xFF	; 255
 2fe:	e2 1a       	sub	r14, r18
 300:	f2 0a       	sbc	r15, r18
 302:	0e 94 ab 03 	call	0x756	; 0x756 <__fixsfsi>
 306:	a8 01       	movw	r20, r16
 308:	4e 0d       	add	r20, r14
 30a:	5f 1d       	adc	r21, r15
 30c:	07 2e       	mov	r0, r23
 30e:	00 0c       	add	r0, r0
 310:	88 0b       	sbc	r24, r24
 312:	99 0b       	sbc	r25, r25
 314:	9e 01       	movw	r18, r28
 316:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <intToStr>
 31a:	df 91       	pop	r29
 31c:	cf 91       	pop	r28
 31e:	1f 91       	pop	r17
 320:	0f 91       	pop	r16
 322:	ff 90       	pop	r15
 324:	ef 90       	pop	r14
 326:	df 90       	pop	r13
 328:	cf 90       	pop	r12
 32a:	bf 90       	pop	r11
 32c:	af 90       	pop	r10
 32e:	9f 90       	pop	r9
 330:	8f 90       	pop	r8
 332:	08 95       	ret

00000334 <USART1_init>:
 334:	e0 e4       	ldi	r30, 0x40	; 64
 336:	f4 e0       	ldi	r31, 0x04	; 4
 338:	20 81       	ld	r18, Z
 33a:	2d 7f       	andi	r18, 0xFD	; 253
 33c:	20 83       	st	Z, r18
 33e:	20 81       	ld	r18, Z
 340:	21 60       	ori	r18, 0x01	; 1
 342:	20 83       	st	Z, r18
 344:	bc 01       	movw	r22, r24
 346:	80 e0       	ldi	r24, 0x00	; 0
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <__floatunsisf>
 34e:	20 e0       	ldi	r18, 0x00	; 0
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	40 e8       	ldi	r20, 0x80	; 128
 354:	51 e4       	ldi	r21, 0x41	; 65
 356:	0e 94 6f 04 	call	0x8de	; 0x8de <__mulsf3>
 35a:	9b 01       	movw	r18, r22
 35c:	ac 01       	movw	r20, r24
 35e:	60 e0       	ldi	r22, 0x00	; 0
 360:	74 e2       	ldi	r23, 0x24	; 36
 362:	84 e7       	ldi	r24, 0x74	; 116
 364:	9d e4       	ldi	r25, 0x4D	; 77
 366:	0e 94 39 03 	call	0x672	; 0x672 <__divsf3>
 36a:	20 e0       	ldi	r18, 0x00	; 0
 36c:	30 e0       	ldi	r19, 0x00	; 0
 36e:	40 e0       	ldi	r20, 0x00	; 0
 370:	5f e3       	ldi	r21, 0x3F	; 63
 372:	0e 94 cd 02 	call	0x59a	; 0x59a <__addsf3>
 376:	0e 94 b2 03 	call	0x764	; 0x764 <__fixunssfsi>
 37a:	e0 e2       	ldi	r30, 0x20	; 32
 37c:	f8 e0       	ldi	r31, 0x08	; 8
 37e:	60 87       	std	Z+8, r22	; 0x08
 380:	71 87       	std	Z+9, r23	; 0x09
 382:	86 81       	ldd	r24, Z+6	; 0x06
 384:	80 6c       	ori	r24, 0xC0	; 192
 386:	86 83       	std	Z+6, r24	; 0x06
 388:	08 95       	ret

0000038a <USART1_sendChar>:
 38a:	90 91 24 08 	lds	r25, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
 38e:	95 ff       	sbrs	r25, 5
 390:	fc cf       	rjmp	.-8      	; 0x38a <USART1_sendChar>
 392:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
 396:	08 95       	ret

00000398 <USART1_sendString>:
 398:	0f 93       	push	r16
 39a:	1f 93       	push	r17
 39c:	cf 93       	push	r28
 39e:	df 93       	push	r29
 3a0:	8c 01       	movw	r16, r24
 3a2:	c0 e0       	ldi	r28, 0x00	; 0
 3a4:	d0 e0       	ldi	r29, 0x00	; 0
 3a6:	07 c0       	rjmp	.+14     	; 0x3b6 <USART1_sendString+0x1e>
 3a8:	f8 01       	movw	r30, r16
 3aa:	ec 0f       	add	r30, r28
 3ac:	fd 1f       	adc	r31, r29
 3ae:	80 81       	ld	r24, Z
 3b0:	0e 94 c5 01 	call	0x38a	; 0x38a <USART1_sendChar>
 3b4:	21 96       	adiw	r28, 0x01	; 1
 3b6:	f8 01       	movw	r30, r16
 3b8:	01 90       	ld	r0, Z+
 3ba:	00 20       	and	r0, r0
 3bc:	e9 f7       	brne	.-6      	; 0x3b8 <USART1_sendString+0x20>
 3be:	31 97       	sbiw	r30, 0x01	; 1
 3c0:	e0 1b       	sub	r30, r16
 3c2:	f1 0b       	sbc	r31, r17
 3c4:	ce 17       	cp	r28, r30
 3c6:	df 07       	cpc	r29, r31
 3c8:	78 f3       	brcs	.-34     	; 0x3a8 <USART1_sendString+0x10>
 3ca:	8a e0       	ldi	r24, 0x0A	; 10
 3cc:	0e 94 c5 01 	call	0x38a	; 0x38a <USART1_sendChar>
 3d0:	df 91       	pop	r29
 3d2:	cf 91       	pop	r28
 3d4:	1f 91       	pop	r17
 3d6:	0f 91       	pop	r16
 3d8:	08 95       	ret

000003da <USART1_sendInt>:

void USART1_sendInt(long val)
{
	intToStr(val, buff, 0);
 3da:	20 e0       	ldi	r18, 0x00	; 0
 3dc:	30 e0       	ldi	r19, 0x00	; 0
 3de:	43 e3       	ldi	r20, 0x33	; 51
 3e0:	50 e4       	ldi	r21, 0x40	; 64
 3e2:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <intToStr>
	USART1_sendString(buff);
 3e6:	83 e3       	ldi	r24, 0x33	; 51
 3e8:	90 e4       	ldi	r25, 0x40	; 64
 3ea:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
 3ee:	08 95       	ret

000003f0 <USART1_sendFloat>:
	//ftoa(val, buff, 2);
	//USART1_sendString(buff);
//}

void USART1_sendFloat(double val, int size)
{
 3f0:	9a 01       	movw	r18, r20
	ftoa(val, buff, size);
 3f2:	43 e3       	ldi	r20, 0x33	; 51
 3f4:	50 e4       	ldi	r21, 0x40	; 64
 3f6:	0e 94 38 01 	call	0x270	; 0x270 <ftoa>
	USART1_sendString(buff);
 3fa:	83 e3       	ldi	r24, 0x33	; 51
 3fc:	90 e4       	ldi	r25, 0x40	; 64
 3fe:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
 402:	08 95       	ret

00000404 <ADC0_init>:


// ADC functions..
void ADC0_init(void)
{
	VREF.ADC0REF = 0x5 | (1 << 7);
 404:	85 e8       	ldi	r24, 0x85	; 133
 406:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7e00a0>
	ADC0.CTRLC = ADC_PRESC_DIV4_gc;        /* CLK_PER divided by 4 */
 40a:	e0 e0       	ldi	r30, 0x00	; 0
 40c:	f6 e0       	ldi	r31, 0x06	; 6
 40e:	81 e0       	ldi	r24, 0x01	; 1
 410:	82 83       	std	Z+2, r24	; 0x02
	ADC0.CTRLA = ADC_ENABLE_bm             /* ADC Enable: enabled */
 412:	80 83       	st	Z, r24
 414:	08 95       	ret

00000416 <ADC0_start>:

/* This function starts the ADC conversions*/
void ADC0_start(void)
{
	/* Start ADC conversion */
	ADC0.COMMAND = ADC_STCONV_bm;
 416:	81 e0       	ldi	r24, 0x01	; 1
 418:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
 41c:	08 95       	ret

0000041e <ADC0_read>:
}

/* This function returns the ADC conversion result */
uint16_t ADC0_read(char pin)
{
	ADC0.MUXPOS = pin;
 41e:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
	ADC0_start();
 422:	0e 94 0b 02 	call	0x416	; 0x416 <ADC0_start>
	/* Wait for ADC result to be ready */
	while (!(ADC0.INTFLAGS & ADC_RESRDY_bm));
 426:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
 42a:	80 ff       	sbrs	r24, 0
 42c:	fc cf       	rjmp	.-8      	; 0x426 <ADC0_read+0x8>
	/* Clear the interrupt flag by reading the result */
	return ADC0.RES;
 42e:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
 432:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
}
 436:	08 95       	ret

00000438 <syringe_dia>:
  int bool_flag=false;
//void syringe_dia(void);
  bool syringe_detected = false;
//unsigned long size=0, SYRINGE_Value=0;
void syringe_dia()
{
 438:	cf 92       	push	r12
 43a:	df 92       	push	r13
 43c:	ef 92       	push	r14
 43e:	ff 92       	push	r15
 440:	cf 93       	push	r28
 442:	df 93       	push	r29
	float syringe_dia = 0.0;
	float sum=0.0;
	
	for(int i=1;i<=50;i++)
 444:	c1 e0       	ldi	r28, 0x01	; 1
 446:	d0 e0       	ldi	r29, 0x00	; 0
  bool syringe_detected = false;
//unsigned long size=0, SYRINGE_Value=0;
void syringe_dia()
{
	float syringe_dia = 0.0;
	float sum=0.0;
 448:	c1 2c       	mov	r12, r1
 44a:	d1 2c       	mov	r13, r1
 44c:	76 01       	movw	r14, r12
	
	for(int i=1;i<=50;i++)
 44e:	12 c0       	rjmp	.+36     	; 0x474 <syringe_dia+0x3c>
	{
		int adc= ADC0_read(channel_3);
 450:	83 e0       	ldi	r24, 0x03	; 3
 452:	0e 94 0f 02 	call	0x41e	; 0x41e <ADC0_read>
		sum=sum+adc;
 456:	bc 01       	movw	r22, r24
 458:	99 0f       	add	r25, r25
 45a:	88 0b       	sbc	r24, r24
 45c:	99 0b       	sbc	r25, r25
 45e:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__floatsisf>
 462:	9b 01       	movw	r18, r22
 464:	ac 01       	movw	r20, r24
 466:	c7 01       	movw	r24, r14
 468:	b6 01       	movw	r22, r12
 46a:	0e 94 cd 02 	call	0x59a	; 0x59a <__addsf3>
 46e:	6b 01       	movw	r12, r22
 470:	7c 01       	movw	r14, r24
void syringe_dia()
{
	float syringe_dia = 0.0;
	float sum=0.0;
	
	for(int i=1;i<=50;i++)
 472:	21 96       	adiw	r28, 0x01	; 1
 474:	c3 33       	cpi	r28, 0x33	; 51
 476:	d1 05       	cpc	r29, r1
 478:	5c f3       	brlt	.-42     	; 0x450 <syringe_dia+0x18>
	{
		int adc= ADC0_read(channel_3);
		sum=sum+adc;
	}
	sum=sum/50.00;
 47a:	20 e0       	ldi	r18, 0x00	; 0
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	48 e4       	ldi	r20, 0x48	; 72
 480:	52 e4       	ldi	r21, 0x42	; 66
 482:	c7 01       	movw	r24, r14
 484:	b6 01       	movw	r22, r12
 486:	0e 94 39 03 	call	0x672	; 0x672 <__divsf3>
	syringe_dia = 0.00676255*(sum) + 5.377882;
 48a:	22 e6       	ldi	r18, 0x62	; 98
 48c:	38 e9       	ldi	r19, 0x98	; 152
 48e:	4d ed       	ldi	r20, 0xDD	; 221
 490:	5b e3       	ldi	r21, 0x3B	; 59
 492:	0e 94 6f 04 	call	0x8de	; 0x8de <__mulsf3>
 496:	2c e9       	ldi	r18, 0x9C	; 156
 498:	37 e1       	ldi	r19, 0x17	; 23
 49a:	4c ea       	ldi	r20, 0xAC	; 172
 49c:	50 e4       	ldi	r21, 0x40	; 64
 49e:	0e 94 cd 02 	call	0x59a	; 0x59a <__addsf3>
 4a2:	6b 01       	movw	r12, r22
 4a4:	7c 01       	movw	r14, r24
	USART1_sendString("Diameter size:");
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	90 e4       	ldi	r25, 0x40	; 64
 4aa:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
	USART1_sendFloat(syringe_dia, 2);
 4ae:	42 e0       	ldi	r20, 0x02	; 2
 4b0:	50 e0       	ldi	r21, 0x00	; 0
 4b2:	c7 01       	movw	r24, r14
 4b4:	b6 01       	movw	r22, r12
 4b6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <USART1_sendFloat>
	//_delay_ms(100);
}
 4ba:	df 91       	pop	r29
 4bc:	cf 91       	pop	r28
 4be:	ff 90       	pop	r15
 4c0:	ef 90       	pop	r14
 4c2:	df 90       	pop	r13
 4c4:	cf 90       	pop	r12
 4c6:	08 95       	ret

000004c8 <__vector_29>:
ISR(PORTC_PORT_vect)
{
 4c8:	1f 92       	push	r1
 4ca:	0f 92       	push	r0
 4cc:	0f b6       	in	r0, 0x3f	; 63
 4ce:	0f 92       	push	r0
 4d0:	11 24       	eor	r1, r1
 4d2:	0b b6       	in	r0, 0x3b	; 59
 4d4:	0f 92       	push	r0
 4d6:	2f 93       	push	r18
 4d8:	3f 93       	push	r19
 4da:	4f 93       	push	r20
 4dc:	5f 93       	push	r21
 4de:	6f 93       	push	r22
 4e0:	7f 93       	push	r23
 4e2:	8f 93       	push	r24
 4e4:	9f 93       	push	r25
 4e6:	af 93       	push	r26
 4e8:	bf 93       	push	r27
 4ea:	ef 93       	push	r30
 4ec:	ff 93       	push	r31
	if(PORTC.INTFLAGS & (1 << 7))
 4ee:	80 91 49 04 	lds	r24, 0x0449	; 0x800449 <__TEXT_REGION_LENGTH__+0x7e0449>
 4f2:	88 23       	and	r24, r24
 4f4:	cc f4       	brge	.+50     	; 0x528 <__vector_29+0x60>
	{
		if (syringe_detected)
 4f6:	80 91 32 40 	lds	r24, 0x4032	; 0x804032 <__data_end>
 4fa:	88 23       	and	r24, r24
 4fc:	39 f0       	breq	.+14     	; 0x50c <__vector_29+0x44>
		{
			syringe_detected = false;
 4fe:	10 92 32 40 	sts	0x4032, r1	; 0x804032 <__data_end>
			USART1_sendString("syringe removed");
 502:	8f e0       	ldi	r24, 0x0F	; 15
 504:	90 e4       	ldi	r25, 0x40	; 64
 506:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
 50a:	09 c0       	rjmp	.+18     	; 0x51e <__vector_29+0x56>
			  
		}
		else
		{
			syringe_detected = true;
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <__data_end>
			USART1_sendString("syringe connected\n");
 512:	8f e1       	ldi	r24, 0x1F	; 31
 514:	90 e4       	ldi	r25, 0x40	; 64
 516:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
			syringe_dia(); 
 51a:	0e 94 1c 02 	call	0x438	; 0x438 <syringe_dia>
		}
		PORTC.INTFLAGS |= (1<<7);
 51e:	e0 e4       	ldi	r30, 0x40	; 64
 520:	f4 e0       	ldi	r31, 0x04	; 4
 522:	81 85       	ldd	r24, Z+9	; 0x09
 524:	80 68       	ori	r24, 0x80	; 128
 526:	81 87       	std	Z+9, r24	; 0x09
	}
	//bool_flag=true;
	//USART1_sendString("syringe detected");
}
 528:	ff 91       	pop	r31
 52a:	ef 91       	pop	r30
 52c:	bf 91       	pop	r27
 52e:	af 91       	pop	r26
 530:	9f 91       	pop	r25
 532:	8f 91       	pop	r24
 534:	7f 91       	pop	r23
 536:	6f 91       	pop	r22
 538:	5f 91       	pop	r21
 53a:	4f 91       	pop	r20
 53c:	3f 91       	pop	r19
 53e:	2f 91       	pop	r18
 540:	0f 90       	pop	r0
 542:	0b be       	out	0x3b, r0	; 59
 544:	0f 90       	pop	r0
 546:	0f be       	out	0x3f, r0	; 63
 548:	0f 90       	pop	r0
 54a:	1f 90       	pop	r1
 54c:	18 95       	reti

0000054e <syringe_check_init>:
  
void syringe_check_init(void)
{
	if(PORTC.IN & PIN7_bm)
 54e:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <__TEXT_REGION_LENGTH__+0x7e0448>
 552:	88 23       	and	r24, r24
 554:	1c f4       	brge	.+6      	; 0x55c <syringe_check_init+0xe>
	{
		syringe_detected = false;
 556:	10 92 32 40 	sts	0x4032, r1	; 0x804032 <__data_end>
 55a:	07 c0       	rjmp	.+14     	; 0x56a <syringe_check_init+0x1c>
	}
	else if (!(PORTC.IN & PIN7_bm))
 55c:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <__TEXT_REGION_LENGTH__+0x7e0448>
 560:	88 23       	and	r24, r24
 562:	1c f0       	brlt	.+6      	; 0x56a <syringe_check_init+0x1c>
	{
		syringe_detected = true;
 564:	81 e0       	ldi	r24, 0x01	; 1
 566:	80 93 32 40 	sts	0x4032, r24	; 0x804032 <__data_end>
	}
	USART1_sendInt(syringe_detected);
 56a:	60 91 32 40 	lds	r22, 0x4032	; 0x804032 <__data_end>
 56e:	70 e0       	ldi	r23, 0x00	; 0
 570:	80 e0       	ldi	r24, 0x00	; 0
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	0e 94 ed 01 	call	0x3da	; 0x3da <USART1_sendInt>
 578:	08 95       	ret

0000057a <main>:
 

 
int main(void)
{
	sei();
 57a:	78 94       	sei
	USART1_init(9600);
 57c:	80 e8       	ldi	r24, 0x80	; 128
 57e:	95 e2       	ldi	r25, 0x25	; 37
 580:	0e 94 9a 01 	call	0x334	; 0x334 <USART1_init>
	ADC0_init();
 584:	0e 94 02 02 	call	0x404	; 0x404 <ADC0_init>
	syringe_check_init();
 588:	0e 94 a7 02 	call	0x54e	; 0x54e <syringe_check_init>
	PORTC.PIN7CTRL |= ((1 << 3)|(0x01<<0)); 
 58c:	e0 e4       	ldi	r30, 0x40	; 64
 58e:	f4 e0       	ldi	r31, 0x04	; 4
 590:	87 89       	ldd	r24, Z+23	; 0x17
 592:	89 60       	ori	r24, 0x09	; 9
 594:	87 8b       	std	Z+23, r24	; 0x17
 596:	ff cf       	rjmp	.-2      	; 0x596 <main+0x1c>

00000598 <__subsf3>:
 598:	50 58       	subi	r21, 0x80	; 128

0000059a <__addsf3>:
 59a:	bb 27       	eor	r27, r27
 59c:	aa 27       	eor	r26, r26
 59e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__addsf3x>
 5a2:	0c 94 35 04 	jmp	0x86a	; 0x86a <__fp_round>
 5a6:	0e 94 27 04 	call	0x84e	; 0x84e <__fp_pscA>
 5aa:	38 f0       	brcs	.+14     	; 0x5ba <__addsf3+0x20>
 5ac:	0e 94 2e 04 	call	0x85c	; 0x85c <__fp_pscB>
 5b0:	20 f0       	brcs	.+8      	; 0x5ba <__addsf3+0x20>
 5b2:	39 f4       	brne	.+14     	; 0x5c2 <__addsf3+0x28>
 5b4:	9f 3f       	cpi	r25, 0xFF	; 255
 5b6:	19 f4       	brne	.+6      	; 0x5be <__addsf3+0x24>
 5b8:	26 f4       	brtc	.+8      	; 0x5c2 <__addsf3+0x28>
 5ba:	0c 94 24 04 	jmp	0x848	; 0x848 <__fp_nan>
 5be:	0e f4       	brtc	.+2      	; 0x5c2 <__addsf3+0x28>
 5c0:	e0 95       	com	r30
 5c2:	e7 fb       	bst	r30, 7
 5c4:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_inf>

000005c8 <__addsf3x>:
 5c8:	e9 2f       	mov	r30, r25
 5ca:	0e 94 46 04 	call	0x88c	; 0x88c <__fp_split3>
 5ce:	58 f3       	brcs	.-42     	; 0x5a6 <__addsf3+0xc>
 5d0:	ba 17       	cp	r27, r26
 5d2:	62 07       	cpc	r22, r18
 5d4:	73 07       	cpc	r23, r19
 5d6:	84 07       	cpc	r24, r20
 5d8:	95 07       	cpc	r25, r21
 5da:	20 f0       	brcs	.+8      	; 0x5e4 <__addsf3x+0x1c>
 5dc:	79 f4       	brne	.+30     	; 0x5fc <__addsf3x+0x34>
 5de:	a6 f5       	brtc	.+104    	; 0x648 <__addsf3x+0x80>
 5e0:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__fp_zero>
 5e4:	0e f4       	brtc	.+2      	; 0x5e8 <__addsf3x+0x20>
 5e6:	e0 95       	com	r30
 5e8:	0b 2e       	mov	r0, r27
 5ea:	ba 2f       	mov	r27, r26
 5ec:	a0 2d       	mov	r26, r0
 5ee:	0b 01       	movw	r0, r22
 5f0:	b9 01       	movw	r22, r18
 5f2:	90 01       	movw	r18, r0
 5f4:	0c 01       	movw	r0, r24
 5f6:	ca 01       	movw	r24, r20
 5f8:	a0 01       	movw	r20, r0
 5fa:	11 24       	eor	r1, r1
 5fc:	ff 27       	eor	r31, r31
 5fe:	59 1b       	sub	r21, r25
 600:	99 f0       	breq	.+38     	; 0x628 <__addsf3x+0x60>
 602:	59 3f       	cpi	r21, 0xF9	; 249
 604:	50 f4       	brcc	.+20     	; 0x61a <__addsf3x+0x52>
 606:	50 3e       	cpi	r21, 0xE0	; 224
 608:	68 f1       	brcs	.+90     	; 0x664 <__addsf3x+0x9c>
 60a:	1a 16       	cp	r1, r26
 60c:	f0 40       	sbci	r31, 0x00	; 0
 60e:	a2 2f       	mov	r26, r18
 610:	23 2f       	mov	r18, r19
 612:	34 2f       	mov	r19, r20
 614:	44 27       	eor	r20, r20
 616:	58 5f       	subi	r21, 0xF8	; 248
 618:	f3 cf       	rjmp	.-26     	; 0x600 <__addsf3x+0x38>
 61a:	46 95       	lsr	r20
 61c:	37 95       	ror	r19
 61e:	27 95       	ror	r18
 620:	a7 95       	ror	r26
 622:	f0 40       	sbci	r31, 0x00	; 0
 624:	53 95       	inc	r21
 626:	c9 f7       	brne	.-14     	; 0x61a <__addsf3x+0x52>
 628:	7e f4       	brtc	.+30     	; 0x648 <__addsf3x+0x80>
 62a:	1f 16       	cp	r1, r31
 62c:	ba 0b       	sbc	r27, r26
 62e:	62 0b       	sbc	r22, r18
 630:	73 0b       	sbc	r23, r19
 632:	84 0b       	sbc	r24, r20
 634:	ba f0       	brmi	.+46     	; 0x664 <__addsf3x+0x9c>
 636:	91 50       	subi	r25, 0x01	; 1
 638:	a1 f0       	breq	.+40     	; 0x662 <__addsf3x+0x9a>
 63a:	ff 0f       	add	r31, r31
 63c:	bb 1f       	adc	r27, r27
 63e:	66 1f       	adc	r22, r22
 640:	77 1f       	adc	r23, r23
 642:	88 1f       	adc	r24, r24
 644:	c2 f7       	brpl	.-16     	; 0x636 <__addsf3x+0x6e>
 646:	0e c0       	rjmp	.+28     	; 0x664 <__addsf3x+0x9c>
 648:	ba 0f       	add	r27, r26
 64a:	62 1f       	adc	r22, r18
 64c:	73 1f       	adc	r23, r19
 64e:	84 1f       	adc	r24, r20
 650:	48 f4       	brcc	.+18     	; 0x664 <__addsf3x+0x9c>
 652:	87 95       	ror	r24
 654:	77 95       	ror	r23
 656:	67 95       	ror	r22
 658:	b7 95       	ror	r27
 65a:	f7 95       	ror	r31
 65c:	9e 3f       	cpi	r25, 0xFE	; 254
 65e:	08 f0       	brcs	.+2      	; 0x662 <__addsf3x+0x9a>
 660:	b0 cf       	rjmp	.-160    	; 0x5c2 <__addsf3+0x28>
 662:	93 95       	inc	r25
 664:	88 0f       	add	r24, r24
 666:	08 f0       	brcs	.+2      	; 0x66a <__addsf3x+0xa2>
 668:	99 27       	eor	r25, r25
 66a:	ee 0f       	add	r30, r30
 66c:	97 95       	ror	r25
 66e:	87 95       	ror	r24
 670:	08 95       	ret

00000672 <__divsf3>:
 672:	0e 94 4d 03 	call	0x69a	; 0x69a <__divsf3x>
 676:	0c 94 35 04 	jmp	0x86a	; 0x86a <__fp_round>
 67a:	0e 94 2e 04 	call	0x85c	; 0x85c <__fp_pscB>
 67e:	58 f0       	brcs	.+22     	; 0x696 <__divsf3+0x24>
 680:	0e 94 27 04 	call	0x84e	; 0x84e <__fp_pscA>
 684:	40 f0       	brcs	.+16     	; 0x696 <__divsf3+0x24>
 686:	29 f4       	brne	.+10     	; 0x692 <__divsf3+0x20>
 688:	5f 3f       	cpi	r21, 0xFF	; 255
 68a:	29 f0       	breq	.+10     	; 0x696 <__divsf3+0x24>
 68c:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_inf>
 690:	51 11       	cpse	r21, r1
 692:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__fp_szero>
 696:	0c 94 24 04 	jmp	0x848	; 0x848 <__fp_nan>

0000069a <__divsf3x>:
 69a:	0e 94 46 04 	call	0x88c	; 0x88c <__fp_split3>
 69e:	68 f3       	brcs	.-38     	; 0x67a <__divsf3+0x8>

000006a0 <__divsf3_pse>:
 6a0:	99 23       	and	r25, r25
 6a2:	b1 f3       	breq	.-20     	; 0x690 <__divsf3+0x1e>
 6a4:	55 23       	and	r21, r21
 6a6:	91 f3       	breq	.-28     	; 0x68c <__divsf3+0x1a>
 6a8:	95 1b       	sub	r25, r21
 6aa:	55 0b       	sbc	r21, r21
 6ac:	bb 27       	eor	r27, r27
 6ae:	aa 27       	eor	r26, r26
 6b0:	62 17       	cp	r22, r18
 6b2:	73 07       	cpc	r23, r19
 6b4:	84 07       	cpc	r24, r20
 6b6:	38 f0       	brcs	.+14     	; 0x6c6 <__divsf3_pse+0x26>
 6b8:	9f 5f       	subi	r25, 0xFF	; 255
 6ba:	5f 4f       	sbci	r21, 0xFF	; 255
 6bc:	22 0f       	add	r18, r18
 6be:	33 1f       	adc	r19, r19
 6c0:	44 1f       	adc	r20, r20
 6c2:	aa 1f       	adc	r26, r26
 6c4:	a9 f3       	breq	.-22     	; 0x6b0 <__divsf3_pse+0x10>
 6c6:	35 d0       	rcall	.+106    	; 0x732 <__divsf3_pse+0x92>
 6c8:	0e 2e       	mov	r0, r30
 6ca:	3a f0       	brmi	.+14     	; 0x6da <__divsf3_pse+0x3a>
 6cc:	e0 e8       	ldi	r30, 0x80	; 128
 6ce:	32 d0       	rcall	.+100    	; 0x734 <__divsf3_pse+0x94>
 6d0:	91 50       	subi	r25, 0x01	; 1
 6d2:	50 40       	sbci	r21, 0x00	; 0
 6d4:	e6 95       	lsr	r30
 6d6:	00 1c       	adc	r0, r0
 6d8:	ca f7       	brpl	.-14     	; 0x6cc <__divsf3_pse+0x2c>
 6da:	2b d0       	rcall	.+86     	; 0x732 <__divsf3_pse+0x92>
 6dc:	fe 2f       	mov	r31, r30
 6de:	29 d0       	rcall	.+82     	; 0x732 <__divsf3_pse+0x92>
 6e0:	66 0f       	add	r22, r22
 6e2:	77 1f       	adc	r23, r23
 6e4:	88 1f       	adc	r24, r24
 6e6:	bb 1f       	adc	r27, r27
 6e8:	26 17       	cp	r18, r22
 6ea:	37 07       	cpc	r19, r23
 6ec:	48 07       	cpc	r20, r24
 6ee:	ab 07       	cpc	r26, r27
 6f0:	b0 e8       	ldi	r27, 0x80	; 128
 6f2:	09 f0       	breq	.+2      	; 0x6f6 <__divsf3_pse+0x56>
 6f4:	bb 0b       	sbc	r27, r27
 6f6:	80 2d       	mov	r24, r0
 6f8:	bf 01       	movw	r22, r30
 6fa:	ff 27       	eor	r31, r31
 6fc:	93 58       	subi	r25, 0x83	; 131
 6fe:	5f 4f       	sbci	r21, 0xFF	; 255
 700:	3a f0       	brmi	.+14     	; 0x710 <__divsf3_pse+0x70>
 702:	9e 3f       	cpi	r25, 0xFE	; 254
 704:	51 05       	cpc	r21, r1
 706:	78 f0       	brcs	.+30     	; 0x726 <__divsf3_pse+0x86>
 708:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_inf>
 70c:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__fp_szero>
 710:	5f 3f       	cpi	r21, 0xFF	; 255
 712:	e4 f3       	brlt	.-8      	; 0x70c <__divsf3_pse+0x6c>
 714:	98 3e       	cpi	r25, 0xE8	; 232
 716:	d4 f3       	brlt	.-12     	; 0x70c <__divsf3_pse+0x6c>
 718:	86 95       	lsr	r24
 71a:	77 95       	ror	r23
 71c:	67 95       	ror	r22
 71e:	b7 95       	ror	r27
 720:	f7 95       	ror	r31
 722:	9f 5f       	subi	r25, 0xFF	; 255
 724:	c9 f7       	brne	.-14     	; 0x718 <__divsf3_pse+0x78>
 726:	88 0f       	add	r24, r24
 728:	91 1d       	adc	r25, r1
 72a:	96 95       	lsr	r25
 72c:	87 95       	ror	r24
 72e:	97 f9       	bld	r25, 7
 730:	08 95       	ret
 732:	e1 e0       	ldi	r30, 0x01	; 1
 734:	66 0f       	add	r22, r22
 736:	77 1f       	adc	r23, r23
 738:	88 1f       	adc	r24, r24
 73a:	bb 1f       	adc	r27, r27
 73c:	62 17       	cp	r22, r18
 73e:	73 07       	cpc	r23, r19
 740:	84 07       	cpc	r24, r20
 742:	ba 07       	cpc	r27, r26
 744:	20 f0       	brcs	.+8      	; 0x74e <__divsf3_pse+0xae>
 746:	62 1b       	sub	r22, r18
 748:	73 0b       	sbc	r23, r19
 74a:	84 0b       	sbc	r24, r20
 74c:	ba 0b       	sbc	r27, r26
 74e:	ee 1f       	adc	r30, r30
 750:	88 f7       	brcc	.-30     	; 0x734 <__divsf3_pse+0x94>
 752:	e0 95       	com	r30
 754:	08 95       	ret

00000756 <__fixsfsi>:
 756:	0e 94 b2 03 	call	0x764	; 0x764 <__fixunssfsi>
 75a:	68 94       	set
 75c:	b1 11       	cpse	r27, r1
 75e:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__fp_szero>
 762:	08 95       	ret

00000764 <__fixunssfsi>:
 764:	0e 94 4e 04 	call	0x89c	; 0x89c <__fp_splitA>
 768:	88 f0       	brcs	.+34     	; 0x78c <__fixunssfsi+0x28>
 76a:	9f 57       	subi	r25, 0x7F	; 127
 76c:	98 f0       	brcs	.+38     	; 0x794 <__fixunssfsi+0x30>
 76e:	b9 2f       	mov	r27, r25
 770:	99 27       	eor	r25, r25
 772:	b7 51       	subi	r27, 0x17	; 23
 774:	b0 f0       	brcs	.+44     	; 0x7a2 <__fixunssfsi+0x3e>
 776:	e1 f0       	breq	.+56     	; 0x7b0 <__fixunssfsi+0x4c>
 778:	66 0f       	add	r22, r22
 77a:	77 1f       	adc	r23, r23
 77c:	88 1f       	adc	r24, r24
 77e:	99 1f       	adc	r25, r25
 780:	1a f0       	brmi	.+6      	; 0x788 <__fixunssfsi+0x24>
 782:	ba 95       	dec	r27
 784:	c9 f7       	brne	.-14     	; 0x778 <__fixunssfsi+0x14>
 786:	14 c0       	rjmp	.+40     	; 0x7b0 <__fixunssfsi+0x4c>
 788:	b1 30       	cpi	r27, 0x01	; 1
 78a:	91 f0       	breq	.+36     	; 0x7b0 <__fixunssfsi+0x4c>
 78c:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__fp_zero>
 790:	b1 e0       	ldi	r27, 0x01	; 1
 792:	08 95       	ret
 794:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__fp_zero>
 798:	67 2f       	mov	r22, r23
 79a:	78 2f       	mov	r23, r24
 79c:	88 27       	eor	r24, r24
 79e:	b8 5f       	subi	r27, 0xF8	; 248
 7a0:	39 f0       	breq	.+14     	; 0x7b0 <__fixunssfsi+0x4c>
 7a2:	b9 3f       	cpi	r27, 0xF9	; 249
 7a4:	cc f3       	brlt	.-14     	; 0x798 <__fixunssfsi+0x34>
 7a6:	86 95       	lsr	r24
 7a8:	77 95       	ror	r23
 7aa:	67 95       	ror	r22
 7ac:	b3 95       	inc	r27
 7ae:	d9 f7       	brne	.-10     	; 0x7a6 <__fixunssfsi+0x42>
 7b0:	3e f4       	brtc	.+14     	; 0x7c0 <__fixunssfsi+0x5c>
 7b2:	90 95       	com	r25
 7b4:	80 95       	com	r24
 7b6:	70 95       	com	r23
 7b8:	61 95       	neg	r22
 7ba:	7f 4f       	sbci	r23, 0xFF	; 255
 7bc:	8f 4f       	sbci	r24, 0xFF	; 255
 7be:	9f 4f       	sbci	r25, 0xFF	; 255
 7c0:	08 95       	ret

000007c2 <__floatunsisf>:
 7c2:	e8 94       	clt
 7c4:	09 c0       	rjmp	.+18     	; 0x7d8 <__floatsisf+0x12>

000007c6 <__floatsisf>:
 7c6:	97 fb       	bst	r25, 7
 7c8:	3e f4       	brtc	.+14     	; 0x7d8 <__floatsisf+0x12>
 7ca:	90 95       	com	r25
 7cc:	80 95       	com	r24
 7ce:	70 95       	com	r23
 7d0:	61 95       	neg	r22
 7d2:	7f 4f       	sbci	r23, 0xFF	; 255
 7d4:	8f 4f       	sbci	r24, 0xFF	; 255
 7d6:	9f 4f       	sbci	r25, 0xFF	; 255
 7d8:	99 23       	and	r25, r25
 7da:	a9 f0       	breq	.+42     	; 0x806 <__floatsisf+0x40>
 7dc:	f9 2f       	mov	r31, r25
 7de:	96 e9       	ldi	r25, 0x96	; 150
 7e0:	bb 27       	eor	r27, r27
 7e2:	93 95       	inc	r25
 7e4:	f6 95       	lsr	r31
 7e6:	87 95       	ror	r24
 7e8:	77 95       	ror	r23
 7ea:	67 95       	ror	r22
 7ec:	b7 95       	ror	r27
 7ee:	f1 11       	cpse	r31, r1
 7f0:	f8 cf       	rjmp	.-16     	; 0x7e2 <__floatsisf+0x1c>
 7f2:	fa f4       	brpl	.+62     	; 0x832 <__floatsisf+0x6c>
 7f4:	bb 0f       	add	r27, r27
 7f6:	11 f4       	brne	.+4      	; 0x7fc <__floatsisf+0x36>
 7f8:	60 ff       	sbrs	r22, 0
 7fa:	1b c0       	rjmp	.+54     	; 0x832 <__floatsisf+0x6c>
 7fc:	6f 5f       	subi	r22, 0xFF	; 255
 7fe:	7f 4f       	sbci	r23, 0xFF	; 255
 800:	8f 4f       	sbci	r24, 0xFF	; 255
 802:	9f 4f       	sbci	r25, 0xFF	; 255
 804:	16 c0       	rjmp	.+44     	; 0x832 <__floatsisf+0x6c>
 806:	88 23       	and	r24, r24
 808:	11 f0       	breq	.+4      	; 0x80e <__floatsisf+0x48>
 80a:	96 e9       	ldi	r25, 0x96	; 150
 80c:	11 c0       	rjmp	.+34     	; 0x830 <__floatsisf+0x6a>
 80e:	77 23       	and	r23, r23
 810:	21 f0       	breq	.+8      	; 0x81a <__floatsisf+0x54>
 812:	9e e8       	ldi	r25, 0x8E	; 142
 814:	87 2f       	mov	r24, r23
 816:	76 2f       	mov	r23, r22
 818:	05 c0       	rjmp	.+10     	; 0x824 <__floatsisf+0x5e>
 81a:	66 23       	and	r22, r22
 81c:	71 f0       	breq	.+28     	; 0x83a <__floatsisf+0x74>
 81e:	96 e8       	ldi	r25, 0x86	; 134
 820:	86 2f       	mov	r24, r22
 822:	70 e0       	ldi	r23, 0x00	; 0
 824:	60 e0       	ldi	r22, 0x00	; 0
 826:	2a f0       	brmi	.+10     	; 0x832 <__floatsisf+0x6c>
 828:	9a 95       	dec	r25
 82a:	66 0f       	add	r22, r22
 82c:	77 1f       	adc	r23, r23
 82e:	88 1f       	adc	r24, r24
 830:	da f7       	brpl	.-10     	; 0x828 <__floatsisf+0x62>
 832:	88 0f       	add	r24, r24
 834:	96 95       	lsr	r25
 836:	87 95       	ror	r24
 838:	97 f9       	bld	r25, 7
 83a:	08 95       	ret

0000083c <__fp_inf>:
 83c:	97 f9       	bld	r25, 7
 83e:	9f 67       	ori	r25, 0x7F	; 127
 840:	80 e8       	ldi	r24, 0x80	; 128
 842:	70 e0       	ldi	r23, 0x00	; 0
 844:	60 e0       	ldi	r22, 0x00	; 0
 846:	08 95       	ret

00000848 <__fp_nan>:
 848:	9f ef       	ldi	r25, 0xFF	; 255
 84a:	80 ec       	ldi	r24, 0xC0	; 192
 84c:	08 95       	ret

0000084e <__fp_pscA>:
 84e:	00 24       	eor	r0, r0
 850:	0a 94       	dec	r0
 852:	16 16       	cp	r1, r22
 854:	17 06       	cpc	r1, r23
 856:	18 06       	cpc	r1, r24
 858:	09 06       	cpc	r0, r25
 85a:	08 95       	ret

0000085c <__fp_pscB>:
 85c:	00 24       	eor	r0, r0
 85e:	0a 94       	dec	r0
 860:	12 16       	cp	r1, r18
 862:	13 06       	cpc	r1, r19
 864:	14 06       	cpc	r1, r20
 866:	05 06       	cpc	r0, r21
 868:	08 95       	ret

0000086a <__fp_round>:
 86a:	09 2e       	mov	r0, r25
 86c:	03 94       	inc	r0
 86e:	00 0c       	add	r0, r0
 870:	11 f4       	brne	.+4      	; 0x876 <__fp_round+0xc>
 872:	88 23       	and	r24, r24
 874:	52 f0       	brmi	.+20     	; 0x88a <__fp_round+0x20>
 876:	bb 0f       	add	r27, r27
 878:	40 f4       	brcc	.+16     	; 0x88a <__fp_round+0x20>
 87a:	bf 2b       	or	r27, r31
 87c:	11 f4       	brne	.+4      	; 0x882 <__fp_round+0x18>
 87e:	60 ff       	sbrs	r22, 0
 880:	04 c0       	rjmp	.+8      	; 0x88a <__fp_round+0x20>
 882:	6f 5f       	subi	r22, 0xFF	; 255
 884:	7f 4f       	sbci	r23, 0xFF	; 255
 886:	8f 4f       	sbci	r24, 0xFF	; 255
 888:	9f 4f       	sbci	r25, 0xFF	; 255
 88a:	08 95       	ret

0000088c <__fp_split3>:
 88c:	57 fd       	sbrc	r21, 7
 88e:	90 58       	subi	r25, 0x80	; 128
 890:	44 0f       	add	r20, r20
 892:	55 1f       	adc	r21, r21
 894:	59 f0       	breq	.+22     	; 0x8ac <__fp_splitA+0x10>
 896:	5f 3f       	cpi	r21, 0xFF	; 255
 898:	71 f0       	breq	.+28     	; 0x8b6 <__fp_splitA+0x1a>
 89a:	47 95       	ror	r20

0000089c <__fp_splitA>:
 89c:	88 0f       	add	r24, r24
 89e:	97 fb       	bst	r25, 7
 8a0:	99 1f       	adc	r25, r25
 8a2:	61 f0       	breq	.+24     	; 0x8bc <__fp_splitA+0x20>
 8a4:	9f 3f       	cpi	r25, 0xFF	; 255
 8a6:	79 f0       	breq	.+30     	; 0x8c6 <__fp_splitA+0x2a>
 8a8:	87 95       	ror	r24
 8aa:	08 95       	ret
 8ac:	12 16       	cp	r1, r18
 8ae:	13 06       	cpc	r1, r19
 8b0:	14 06       	cpc	r1, r20
 8b2:	55 1f       	adc	r21, r21
 8b4:	f2 cf       	rjmp	.-28     	; 0x89a <__fp_split3+0xe>
 8b6:	46 95       	lsr	r20
 8b8:	f1 df       	rcall	.-30     	; 0x89c <__fp_splitA>
 8ba:	08 c0       	rjmp	.+16     	; 0x8cc <__fp_splitA+0x30>
 8bc:	16 16       	cp	r1, r22
 8be:	17 06       	cpc	r1, r23
 8c0:	18 06       	cpc	r1, r24
 8c2:	99 1f       	adc	r25, r25
 8c4:	f1 cf       	rjmp	.-30     	; 0x8a8 <__fp_splitA+0xc>
 8c6:	86 95       	lsr	r24
 8c8:	71 05       	cpc	r23, r1
 8ca:	61 05       	cpc	r22, r1
 8cc:	08 94       	sec
 8ce:	08 95       	ret

000008d0 <__fp_zero>:
 8d0:	e8 94       	clt

000008d2 <__fp_szero>:
 8d2:	bb 27       	eor	r27, r27
 8d4:	66 27       	eor	r22, r22
 8d6:	77 27       	eor	r23, r23
 8d8:	cb 01       	movw	r24, r22
 8da:	97 f9       	bld	r25, 7
 8dc:	08 95       	ret

000008de <__mulsf3>:
 8de:	0e 94 82 04 	call	0x904	; 0x904 <__mulsf3x>
 8e2:	0c 94 35 04 	jmp	0x86a	; 0x86a <__fp_round>
 8e6:	0e 94 27 04 	call	0x84e	; 0x84e <__fp_pscA>
 8ea:	38 f0       	brcs	.+14     	; 0x8fa <__mulsf3+0x1c>
 8ec:	0e 94 2e 04 	call	0x85c	; 0x85c <__fp_pscB>
 8f0:	20 f0       	brcs	.+8      	; 0x8fa <__mulsf3+0x1c>
 8f2:	95 23       	and	r25, r21
 8f4:	11 f0       	breq	.+4      	; 0x8fa <__mulsf3+0x1c>
 8f6:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_inf>
 8fa:	0c 94 24 04 	jmp	0x848	; 0x848 <__fp_nan>
 8fe:	11 24       	eor	r1, r1
 900:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__fp_szero>

00000904 <__mulsf3x>:
 904:	0e 94 46 04 	call	0x88c	; 0x88c <__fp_split3>
 908:	70 f3       	brcs	.-36     	; 0x8e6 <__mulsf3+0x8>

0000090a <__mulsf3_pse>:
 90a:	95 9f       	mul	r25, r21
 90c:	c1 f3       	breq	.-16     	; 0x8fe <__mulsf3+0x20>
 90e:	95 0f       	add	r25, r21
 910:	50 e0       	ldi	r21, 0x00	; 0
 912:	55 1f       	adc	r21, r21
 914:	62 9f       	mul	r22, r18
 916:	f0 01       	movw	r30, r0
 918:	72 9f       	mul	r23, r18
 91a:	bb 27       	eor	r27, r27
 91c:	f0 0d       	add	r31, r0
 91e:	b1 1d       	adc	r27, r1
 920:	63 9f       	mul	r22, r19
 922:	aa 27       	eor	r26, r26
 924:	f0 0d       	add	r31, r0
 926:	b1 1d       	adc	r27, r1
 928:	aa 1f       	adc	r26, r26
 92a:	64 9f       	mul	r22, r20
 92c:	66 27       	eor	r22, r22
 92e:	b0 0d       	add	r27, r0
 930:	a1 1d       	adc	r26, r1
 932:	66 1f       	adc	r22, r22
 934:	82 9f       	mul	r24, r18
 936:	22 27       	eor	r18, r18
 938:	b0 0d       	add	r27, r0
 93a:	a1 1d       	adc	r26, r1
 93c:	62 1f       	adc	r22, r18
 93e:	73 9f       	mul	r23, r19
 940:	b0 0d       	add	r27, r0
 942:	a1 1d       	adc	r26, r1
 944:	62 1f       	adc	r22, r18
 946:	83 9f       	mul	r24, r19
 948:	a0 0d       	add	r26, r0
 94a:	61 1d       	adc	r22, r1
 94c:	22 1f       	adc	r18, r18
 94e:	74 9f       	mul	r23, r20
 950:	33 27       	eor	r19, r19
 952:	a0 0d       	add	r26, r0
 954:	61 1d       	adc	r22, r1
 956:	23 1f       	adc	r18, r19
 958:	84 9f       	mul	r24, r20
 95a:	60 0d       	add	r22, r0
 95c:	21 1d       	adc	r18, r1
 95e:	82 2f       	mov	r24, r18
 960:	76 2f       	mov	r23, r22
 962:	6a 2f       	mov	r22, r26
 964:	11 24       	eor	r1, r1
 966:	9f 57       	subi	r25, 0x7F	; 127
 968:	50 40       	sbci	r21, 0x00	; 0
 96a:	9a f0       	brmi	.+38     	; 0x992 <__mulsf3_pse+0x88>
 96c:	f1 f0       	breq	.+60     	; 0x9aa <__mulsf3_pse+0xa0>
 96e:	88 23       	and	r24, r24
 970:	4a f0       	brmi	.+18     	; 0x984 <__mulsf3_pse+0x7a>
 972:	ee 0f       	add	r30, r30
 974:	ff 1f       	adc	r31, r31
 976:	bb 1f       	adc	r27, r27
 978:	66 1f       	adc	r22, r22
 97a:	77 1f       	adc	r23, r23
 97c:	88 1f       	adc	r24, r24
 97e:	91 50       	subi	r25, 0x01	; 1
 980:	50 40       	sbci	r21, 0x00	; 0
 982:	a9 f7       	brne	.-22     	; 0x96e <__mulsf3_pse+0x64>
 984:	9e 3f       	cpi	r25, 0xFE	; 254
 986:	51 05       	cpc	r21, r1
 988:	80 f0       	brcs	.+32     	; 0x9aa <__mulsf3_pse+0xa0>
 98a:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_inf>
 98e:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__fp_szero>
 992:	5f 3f       	cpi	r21, 0xFF	; 255
 994:	e4 f3       	brlt	.-8      	; 0x98e <__mulsf3_pse+0x84>
 996:	98 3e       	cpi	r25, 0xE8	; 232
 998:	d4 f3       	brlt	.-12     	; 0x98e <__mulsf3_pse+0x84>
 99a:	86 95       	lsr	r24
 99c:	77 95       	ror	r23
 99e:	67 95       	ror	r22
 9a0:	b7 95       	ror	r27
 9a2:	f7 95       	ror	r31
 9a4:	e7 95       	ror	r30
 9a6:	9f 5f       	subi	r25, 0xFF	; 255
 9a8:	c1 f7       	brne	.-16     	; 0x99a <__mulsf3_pse+0x90>
 9aa:	fe 2b       	or	r31, r30
 9ac:	88 0f       	add	r24, r24
 9ae:	91 1d       	adc	r25, r1
 9b0:	96 95       	lsr	r25
 9b2:	87 95       	ror	r24
 9b4:	97 f9       	bld	r25, 7
 9b6:	08 95       	ret

000009b8 <pow>:
 9b8:	fa 01       	movw	r30, r20
 9ba:	ee 0f       	add	r30, r30
 9bc:	ff 1f       	adc	r31, r31
 9be:	30 96       	adiw	r30, 0x00	; 0
 9c0:	21 05       	cpc	r18, r1
 9c2:	31 05       	cpc	r19, r1
 9c4:	a1 f1       	breq	.+104    	; 0xa2e <pow+0x76>
 9c6:	61 15       	cp	r22, r1
 9c8:	71 05       	cpc	r23, r1
 9ca:	61 f4       	brne	.+24     	; 0x9e4 <pow+0x2c>
 9cc:	80 38       	cpi	r24, 0x80	; 128
 9ce:	bf e3       	ldi	r27, 0x3F	; 63
 9d0:	9b 07       	cpc	r25, r27
 9d2:	49 f1       	breq	.+82     	; 0xa26 <pow+0x6e>
 9d4:	68 94       	set
 9d6:	90 38       	cpi	r25, 0x80	; 128
 9d8:	81 05       	cpc	r24, r1
 9da:	61 f0       	breq	.+24     	; 0x9f4 <pow+0x3c>
 9dc:	80 38       	cpi	r24, 0x80	; 128
 9de:	bf ef       	ldi	r27, 0xFF	; 255
 9e0:	9b 07       	cpc	r25, r27
 9e2:	41 f0       	breq	.+16     	; 0x9f4 <pow+0x3c>
 9e4:	99 23       	and	r25, r25
 9e6:	4a f5       	brpl	.+82     	; 0xa3a <pow+0x82>
 9e8:	ff 3f       	cpi	r31, 0xFF	; 255
 9ea:	e1 05       	cpc	r30, r1
 9ec:	31 05       	cpc	r19, r1
 9ee:	21 05       	cpc	r18, r1
 9f0:	19 f1       	breq	.+70     	; 0xa38 <pow+0x80>
 9f2:	e8 94       	clt
 9f4:	08 94       	sec
 9f6:	e7 95       	ror	r30
 9f8:	d9 01       	movw	r26, r18
 9fa:	aa 23       	and	r26, r26
 9fc:	29 f4       	brne	.+10     	; 0xa08 <pow+0x50>
 9fe:	ab 2f       	mov	r26, r27
 a00:	be 2f       	mov	r27, r30
 a02:	f8 5f       	subi	r31, 0xF8	; 248
 a04:	d0 f3       	brcs	.-12     	; 0x9fa <pow+0x42>
 a06:	10 c0       	rjmp	.+32     	; 0xa28 <pow+0x70>
 a08:	ff 5f       	subi	r31, 0xFF	; 255
 a0a:	70 f4       	brcc	.+28     	; 0xa28 <pow+0x70>
 a0c:	a6 95       	lsr	r26
 a0e:	e0 f7       	brcc	.-8      	; 0xa08 <pow+0x50>
 a10:	f7 39       	cpi	r31, 0x97	; 151
 a12:	50 f0       	brcs	.+20     	; 0xa28 <pow+0x70>
 a14:	19 f0       	breq	.+6      	; 0xa1c <pow+0x64>
 a16:	ff 3a       	cpi	r31, 0xAF	; 175
 a18:	38 f4       	brcc	.+14     	; 0xa28 <pow+0x70>
 a1a:	9f 77       	andi	r25, 0x7F	; 127
 a1c:	9f 93       	push	r25
 a1e:	0d d0       	rcall	.+26     	; 0xa3a <pow+0x82>
 a20:	0f 90       	pop	r0
 a22:	07 fc       	sbrc	r0, 7
 a24:	90 58       	subi	r25, 0x80	; 128
 a26:	08 95       	ret
 a28:	46 f0       	brts	.+16     	; 0xa3a <pow+0x82>
 a2a:	0c 94 24 04 	jmp	0x848	; 0x848 <__fp_nan>
 a2e:	60 e0       	ldi	r22, 0x00	; 0
 a30:	70 e0       	ldi	r23, 0x00	; 0
 a32:	80 e8       	ldi	r24, 0x80	; 128
 a34:	9f e3       	ldi	r25, 0x3F	; 63
 a36:	08 95       	ret
 a38:	4f e7       	ldi	r20, 0x7F	; 127
 a3a:	9f 77       	andi	r25, 0x7F	; 127
 a3c:	5f 93       	push	r21
 a3e:	4f 93       	push	r20
 a40:	3f 93       	push	r19
 a42:	2f 93       	push	r18
 a44:	0e 94 d7 05 	call	0xbae	; 0xbae <log>
 a48:	2f 91       	pop	r18
 a4a:	3f 91       	pop	r19
 a4c:	4f 91       	pop	r20
 a4e:	5f 91       	pop	r21
 a50:	0e 94 6f 04 	call	0x8de	; 0x8de <__mulsf3>
 a54:	0c 94 34 05 	jmp	0xa68	; 0xa68 <exp>
 a58:	29 f4       	brne	.+10     	; 0xa64 <pow+0xac>
 a5a:	16 f0       	brts	.+4      	; 0xa60 <pow+0xa8>
 a5c:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_inf>
 a60:	0c 94 68 04 	jmp	0x8d0	; 0x8d0 <__fp_zero>
 a64:	0c 94 24 04 	jmp	0x848	; 0x848 <__fp_nan>

00000a68 <exp>:
 a68:	0e 94 4e 04 	call	0x89c	; 0x89c <__fp_splitA>
 a6c:	a8 f3       	brcs	.-22     	; 0xa58 <pow+0xa0>
 a6e:	96 38       	cpi	r25, 0x86	; 134
 a70:	a0 f7       	brcc	.-24     	; 0xa5a <pow+0xa2>
 a72:	07 f8       	bld	r0, 7
 a74:	0f 92       	push	r0
 a76:	e8 94       	clt
 a78:	2b e3       	ldi	r18, 0x3B	; 59
 a7a:	3a ea       	ldi	r19, 0xAA	; 170
 a7c:	48 eb       	ldi	r20, 0xB8	; 184
 a7e:	5f e7       	ldi	r21, 0x7F	; 127
 a80:	0e 94 85 04 	call	0x90a	; 0x90a <__mulsf3_pse>
 a84:	0f 92       	push	r0
 a86:	0f 92       	push	r0
 a88:	0f 92       	push	r0
 a8a:	4d b7       	in	r20, 0x3d	; 61
 a8c:	5e b7       	in	r21, 0x3e	; 62
 a8e:	0f 92       	push	r0
 a90:	0e 94 1f 06 	call	0xc3e	; 0xc3e <modf>
 a94:	e0 e0       	ldi	r30, 0x00	; 0
 a96:	f1 e0       	ldi	r31, 0x01	; 1
 a98:	0e 94 66 05 	call	0xacc	; 0xacc <__fp_powser>
 a9c:	4f 91       	pop	r20
 a9e:	5f 91       	pop	r21
 aa0:	ef 91       	pop	r30
 aa2:	ff 91       	pop	r31
 aa4:	e5 95       	asr	r30
 aa6:	ee 1f       	adc	r30, r30
 aa8:	ff 1f       	adc	r31, r31
 aaa:	49 f0       	breq	.+18     	; 0xabe <exp+0x56>
 aac:	fe 57       	subi	r31, 0x7E	; 126
 aae:	e0 68       	ori	r30, 0x80	; 128
 ab0:	44 27       	eor	r20, r20
 ab2:	ee 0f       	add	r30, r30
 ab4:	44 1f       	adc	r20, r20
 ab6:	fa 95       	dec	r31
 ab8:	e1 f7       	brne	.-8      	; 0xab2 <exp+0x4a>
 aba:	41 95       	neg	r20
 abc:	55 0b       	sbc	r21, r21
 abe:	0e 94 99 05 	call	0xb32	; 0xb32 <ldexp>
 ac2:	0f 90       	pop	r0
 ac4:	07 fe       	sbrs	r0, 7
 ac6:	0c 94 8d 05 	jmp	0xb1a	; 0xb1a <inverse>
 aca:	08 95       	ret

00000acc <__fp_powser>:
 acc:	df 93       	push	r29
 ace:	cf 93       	push	r28
 ad0:	1f 93       	push	r17
 ad2:	0f 93       	push	r16
 ad4:	ff 92       	push	r15
 ad6:	ef 92       	push	r14
 ad8:	df 92       	push	r13
 ada:	7b 01       	movw	r14, r22
 adc:	8c 01       	movw	r16, r24
 ade:	68 94       	set
 ae0:	06 c0       	rjmp	.+12     	; 0xaee <__fp_powser+0x22>
 ae2:	da 2e       	mov	r13, r26
 ae4:	ef 01       	movw	r28, r30
 ae6:	0e 94 82 04 	call	0x904	; 0x904 <__mulsf3x>
 aea:	fe 01       	movw	r30, r28
 aec:	e8 94       	clt
 aee:	a5 91       	lpm	r26, Z+
 af0:	25 91       	lpm	r18, Z+
 af2:	35 91       	lpm	r19, Z+
 af4:	45 91       	lpm	r20, Z+
 af6:	55 91       	lpm	r21, Z+
 af8:	a6 f3       	brts	.-24     	; 0xae2 <__fp_powser+0x16>
 afa:	ef 01       	movw	r28, r30
 afc:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__addsf3x>
 b00:	fe 01       	movw	r30, r28
 b02:	97 01       	movw	r18, r14
 b04:	a8 01       	movw	r20, r16
 b06:	da 94       	dec	r13
 b08:	69 f7       	brne	.-38     	; 0xae4 <__fp_powser+0x18>
 b0a:	df 90       	pop	r13
 b0c:	ef 90       	pop	r14
 b0e:	ff 90       	pop	r15
 b10:	0f 91       	pop	r16
 b12:	1f 91       	pop	r17
 b14:	cf 91       	pop	r28
 b16:	df 91       	pop	r29
 b18:	08 95       	ret

00000b1a <inverse>:
 b1a:	9b 01       	movw	r18, r22
 b1c:	ac 01       	movw	r20, r24
 b1e:	60 e0       	ldi	r22, 0x00	; 0
 b20:	70 e0       	ldi	r23, 0x00	; 0
 b22:	80 e8       	ldi	r24, 0x80	; 128
 b24:	9f e3       	ldi	r25, 0x3F	; 63
 b26:	0c 94 39 03 	jmp	0x672	; 0x672 <__divsf3>
 b2a:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_inf>
 b2e:	0c 94 53 06 	jmp	0xca6	; 0xca6 <__fp_mpack>

00000b32 <ldexp>:
 b32:	0e 94 4e 04 	call	0x89c	; 0x89c <__fp_splitA>
 b36:	d8 f3       	brcs	.-10     	; 0xb2e <inverse+0x14>
 b38:	99 23       	and	r25, r25
 b3a:	c9 f3       	breq	.-14     	; 0xb2e <inverse+0x14>
 b3c:	94 0f       	add	r25, r20
 b3e:	51 1d       	adc	r21, r1
 b40:	a3 f3       	brvs	.-24     	; 0xb2a <inverse+0x10>
 b42:	91 50       	subi	r25, 0x01	; 1
 b44:	50 40       	sbci	r21, 0x00	; 0
 b46:	94 f0       	brlt	.+36     	; 0xb6c <ldexp+0x3a>
 b48:	59 f0       	breq	.+22     	; 0xb60 <ldexp+0x2e>
 b4a:	88 23       	and	r24, r24
 b4c:	32 f0       	brmi	.+12     	; 0xb5a <ldexp+0x28>
 b4e:	66 0f       	add	r22, r22
 b50:	77 1f       	adc	r23, r23
 b52:	88 1f       	adc	r24, r24
 b54:	91 50       	subi	r25, 0x01	; 1
 b56:	50 40       	sbci	r21, 0x00	; 0
 b58:	c1 f7       	brne	.-16     	; 0xb4a <ldexp+0x18>
 b5a:	9e 3f       	cpi	r25, 0xFE	; 254
 b5c:	51 05       	cpc	r21, r1
 b5e:	2c f7       	brge	.-54     	; 0xb2a <inverse+0x10>
 b60:	88 0f       	add	r24, r24
 b62:	91 1d       	adc	r25, r1
 b64:	96 95       	lsr	r25
 b66:	87 95       	ror	r24
 b68:	97 f9       	bld	r25, 7
 b6a:	08 95       	ret
 b6c:	5f 3f       	cpi	r21, 0xFF	; 255
 b6e:	ac f0       	brlt	.+42     	; 0xb9a <ldexp+0x68>
 b70:	98 3e       	cpi	r25, 0xE8	; 232
 b72:	9c f0       	brlt	.+38     	; 0xb9a <ldexp+0x68>
 b74:	bb 27       	eor	r27, r27
 b76:	86 95       	lsr	r24
 b78:	77 95       	ror	r23
 b7a:	67 95       	ror	r22
 b7c:	b7 95       	ror	r27
 b7e:	08 f4       	brcc	.+2      	; 0xb82 <ldexp+0x50>
 b80:	b1 60       	ori	r27, 0x01	; 1
 b82:	93 95       	inc	r25
 b84:	c1 f7       	brne	.-16     	; 0xb76 <ldexp+0x44>
 b86:	bb 0f       	add	r27, r27
 b88:	58 f7       	brcc	.-42     	; 0xb60 <ldexp+0x2e>
 b8a:	11 f4       	brne	.+4      	; 0xb90 <ldexp+0x5e>
 b8c:	60 ff       	sbrs	r22, 0
 b8e:	e8 cf       	rjmp	.-48     	; 0xb60 <ldexp+0x2e>
 b90:	6f 5f       	subi	r22, 0xFF	; 255
 b92:	7f 4f       	sbci	r23, 0xFF	; 255
 b94:	8f 4f       	sbci	r24, 0xFF	; 255
 b96:	9f 4f       	sbci	r25, 0xFF	; 255
 b98:	e3 cf       	rjmp	.-58     	; 0xb60 <ldexp+0x2e>
 b9a:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__fp_szero>
 b9e:	16 f0       	brts	.+4      	; 0xba4 <ldexp+0x72>
 ba0:	0c 94 53 06 	jmp	0xca6	; 0xca6 <__fp_mpack>
 ba4:	0c 94 24 04 	jmp	0x848	; 0x848 <__fp_nan>
 ba8:	68 94       	set
 baa:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__fp_inf>

00000bae <log>:
 bae:	0e 94 4e 04 	call	0x89c	; 0x89c <__fp_splitA>
 bb2:	a8 f3       	brcs	.-22     	; 0xb9e <ldexp+0x6c>
 bb4:	99 23       	and	r25, r25
 bb6:	c1 f3       	breq	.-16     	; 0xba8 <ldexp+0x76>
 bb8:	ae f3       	brts	.-22     	; 0xba4 <ldexp+0x72>
 bba:	df 93       	push	r29
 bbc:	cf 93       	push	r28
 bbe:	1f 93       	push	r17
 bc0:	0f 93       	push	r16
 bc2:	ff 92       	push	r15
 bc4:	c9 2f       	mov	r28, r25
 bc6:	dd 27       	eor	r29, r29
 bc8:	88 23       	and	r24, r24
 bca:	2a f0       	brmi	.+10     	; 0xbd6 <log+0x28>
 bcc:	21 97       	sbiw	r28, 0x01	; 1
 bce:	66 0f       	add	r22, r22
 bd0:	77 1f       	adc	r23, r23
 bd2:	88 1f       	adc	r24, r24
 bd4:	da f7       	brpl	.-10     	; 0xbcc <log+0x1e>
 bd6:	20 e0       	ldi	r18, 0x00	; 0
 bd8:	30 e0       	ldi	r19, 0x00	; 0
 bda:	40 e8       	ldi	r20, 0x80	; 128
 bdc:	5f eb       	ldi	r21, 0xBF	; 191
 bde:	9f e3       	ldi	r25, 0x3F	; 63
 be0:	88 39       	cpi	r24, 0x98	; 152
 be2:	20 f0       	brcs	.+8      	; 0xbec <log+0x3e>
 be4:	80 3e       	cpi	r24, 0xE0	; 224
 be6:	38 f0       	brcs	.+14     	; 0xbf6 <log+0x48>
 be8:	21 96       	adiw	r28, 0x01	; 1
 bea:	8f 77       	andi	r24, 0x7F	; 127
 bec:	0e 94 cd 02 	call	0x59a	; 0x59a <__addsf3>
 bf0:	e8 e2       	ldi	r30, 0x28	; 40
 bf2:	f1 e0       	ldi	r31, 0x01	; 1
 bf4:	04 c0       	rjmp	.+8      	; 0xbfe <log+0x50>
 bf6:	0e 94 cd 02 	call	0x59a	; 0x59a <__addsf3>
 bfa:	e5 e5       	ldi	r30, 0x55	; 85
 bfc:	f1 e0       	ldi	r31, 0x01	; 1
 bfe:	0e 94 66 05 	call	0xacc	; 0xacc <__fp_powser>
 c02:	8b 01       	movw	r16, r22
 c04:	be 01       	movw	r22, r28
 c06:	ec 01       	movw	r28, r24
 c08:	fb 2e       	mov	r15, r27
 c0a:	6f 57       	subi	r22, 0x7F	; 127
 c0c:	71 09       	sbc	r23, r1
 c0e:	75 95       	asr	r23
 c10:	77 1f       	adc	r23, r23
 c12:	88 0b       	sbc	r24, r24
 c14:	99 0b       	sbc	r25, r25
 c16:	0e 94 e3 03 	call	0x7c6	; 0x7c6 <__floatsisf>
 c1a:	28 e1       	ldi	r18, 0x18	; 24
 c1c:	32 e7       	ldi	r19, 0x72	; 114
 c1e:	41 e3       	ldi	r20, 0x31	; 49
 c20:	5f e3       	ldi	r21, 0x3F	; 63
 c22:	0e 94 82 04 	call	0x904	; 0x904 <__mulsf3x>
 c26:	af 2d       	mov	r26, r15
 c28:	98 01       	movw	r18, r16
 c2a:	ae 01       	movw	r20, r28
 c2c:	ff 90       	pop	r15
 c2e:	0f 91       	pop	r16
 c30:	1f 91       	pop	r17
 c32:	cf 91       	pop	r28
 c34:	df 91       	pop	r29
 c36:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <__addsf3x>
 c3a:	0c 94 35 04 	jmp	0x86a	; 0x86a <__fp_round>

00000c3e <modf>:
 c3e:	fa 01       	movw	r30, r20
 c40:	dc 01       	movw	r26, r24
 c42:	aa 0f       	add	r26, r26
 c44:	bb 1f       	adc	r27, r27
 c46:	9b 01       	movw	r18, r22
 c48:	ac 01       	movw	r20, r24
 c4a:	bf 57       	subi	r27, 0x7F	; 127
 c4c:	28 f4       	brcc	.+10     	; 0xc58 <modf+0x1a>
 c4e:	22 27       	eor	r18, r18
 c50:	33 27       	eor	r19, r19
 c52:	44 27       	eor	r20, r20
 c54:	50 78       	andi	r21, 0x80	; 128
 c56:	20 c0       	rjmp	.+64     	; 0xc98 <modf+0x5a>
 c58:	b7 51       	subi	r27, 0x17	; 23
 c5a:	90 f4       	brcc	.+36     	; 0xc80 <modf+0x42>
 c5c:	ab 2f       	mov	r26, r27
 c5e:	00 24       	eor	r0, r0
 c60:	46 95       	lsr	r20
 c62:	37 95       	ror	r19
 c64:	27 95       	ror	r18
 c66:	01 1c       	adc	r0, r1
 c68:	a3 95       	inc	r26
 c6a:	d2 f3       	brmi	.-12     	; 0xc60 <modf+0x22>
 c6c:	00 20       	and	r0, r0
 c6e:	71 f0       	breq	.+28     	; 0xc8c <modf+0x4e>
 c70:	22 0f       	add	r18, r18
 c72:	33 1f       	adc	r19, r19
 c74:	44 1f       	adc	r20, r20
 c76:	b3 95       	inc	r27
 c78:	da f3       	brmi	.-10     	; 0xc70 <modf+0x32>
 c7a:	0e d0       	rcall	.+28     	; 0xc98 <modf+0x5a>
 c7c:	0c 94 cc 02 	jmp	0x598	; 0x598 <__subsf3>
 c80:	61 30       	cpi	r22, 0x01	; 1
 c82:	71 05       	cpc	r23, r1
 c84:	a0 e8       	ldi	r26, 0x80	; 128
 c86:	8a 07       	cpc	r24, r26
 c88:	b9 46       	sbci	r27, 0x69	; 105
 c8a:	30 f4       	brcc	.+12     	; 0xc98 <modf+0x5a>
 c8c:	9b 01       	movw	r18, r22
 c8e:	ac 01       	movw	r20, r24
 c90:	66 27       	eor	r22, r22
 c92:	77 27       	eor	r23, r23
 c94:	88 27       	eor	r24, r24
 c96:	90 78       	andi	r25, 0x80	; 128
 c98:	30 96       	adiw	r30, 0x00	; 0
 c9a:	21 f0       	breq	.+8      	; 0xca4 <modf+0x66>
 c9c:	20 83       	st	Z, r18
 c9e:	31 83       	std	Z+1, r19	; 0x01
 ca0:	42 83       	std	Z+2, r20	; 0x02
 ca2:	53 83       	std	Z+3, r21	; 0x03
 ca4:	08 95       	ret

00000ca6 <__fp_mpack>:
 ca6:	9f 3f       	cpi	r25, 0xFF	; 255
 ca8:	31 f0       	breq	.+12     	; 0xcb6 <__fp_mpack_finite+0xc>

00000caa <__fp_mpack_finite>:
 caa:	91 50       	subi	r25, 0x01	; 1
 cac:	20 f4       	brcc	.+8      	; 0xcb6 <__fp_mpack_finite+0xc>
 cae:	87 95       	ror	r24
 cb0:	77 95       	ror	r23
 cb2:	67 95       	ror	r22
 cb4:	b7 95       	ror	r27
 cb6:	88 0f       	add	r24, r24
 cb8:	91 1d       	adc	r25, r1
 cba:	96 95       	lsr	r25
 cbc:	87 95       	ror	r24
 cbe:	97 f9       	bld	r25, 7
 cc0:	08 95       	ret

00000cc2 <__divmodsi4>:
 cc2:	05 2e       	mov	r0, r21
 cc4:	97 fb       	bst	r25, 7
 cc6:	1e f4       	brtc	.+6      	; 0xcce <__divmodsi4+0xc>
 cc8:	00 94       	com	r0
 cca:	0e 94 78 06 	call	0xcf0	; 0xcf0 <__negsi2>
 cce:	57 fd       	sbrc	r21, 7
 cd0:	07 d0       	rcall	.+14     	; 0xce0 <__divmodsi4_neg2>
 cd2:	0e 94 80 06 	call	0xd00	; 0xd00 <__udivmodsi4>
 cd6:	07 fc       	sbrc	r0, 7
 cd8:	03 d0       	rcall	.+6      	; 0xce0 <__divmodsi4_neg2>
 cda:	4e f4       	brtc	.+18     	; 0xcee <__divmodsi4_exit>
 cdc:	0c 94 78 06 	jmp	0xcf0	; 0xcf0 <__negsi2>

00000ce0 <__divmodsi4_neg2>:
 ce0:	50 95       	com	r21
 ce2:	40 95       	com	r20
 ce4:	30 95       	com	r19
 ce6:	21 95       	neg	r18
 ce8:	3f 4f       	sbci	r19, 0xFF	; 255
 cea:	4f 4f       	sbci	r20, 0xFF	; 255
 cec:	5f 4f       	sbci	r21, 0xFF	; 255

00000cee <__divmodsi4_exit>:
 cee:	08 95       	ret

00000cf0 <__negsi2>:
 cf0:	90 95       	com	r25
 cf2:	80 95       	com	r24
 cf4:	70 95       	com	r23
 cf6:	61 95       	neg	r22
 cf8:	7f 4f       	sbci	r23, 0xFF	; 255
 cfa:	8f 4f       	sbci	r24, 0xFF	; 255
 cfc:	9f 4f       	sbci	r25, 0xFF	; 255
 cfe:	08 95       	ret

00000d00 <__udivmodsi4>:
 d00:	a1 e2       	ldi	r26, 0x21	; 33
 d02:	1a 2e       	mov	r1, r26
 d04:	aa 1b       	sub	r26, r26
 d06:	bb 1b       	sub	r27, r27
 d08:	fd 01       	movw	r30, r26
 d0a:	0d c0       	rjmp	.+26     	; 0xd26 <__udivmodsi4_ep>

00000d0c <__udivmodsi4_loop>:
 d0c:	aa 1f       	adc	r26, r26
 d0e:	bb 1f       	adc	r27, r27
 d10:	ee 1f       	adc	r30, r30
 d12:	ff 1f       	adc	r31, r31
 d14:	a2 17       	cp	r26, r18
 d16:	b3 07       	cpc	r27, r19
 d18:	e4 07       	cpc	r30, r20
 d1a:	f5 07       	cpc	r31, r21
 d1c:	20 f0       	brcs	.+8      	; 0xd26 <__udivmodsi4_ep>
 d1e:	a2 1b       	sub	r26, r18
 d20:	b3 0b       	sbc	r27, r19
 d22:	e4 0b       	sbc	r30, r20
 d24:	f5 0b       	sbc	r31, r21

00000d26 <__udivmodsi4_ep>:
 d26:	66 1f       	adc	r22, r22
 d28:	77 1f       	adc	r23, r23
 d2a:	88 1f       	adc	r24, r24
 d2c:	99 1f       	adc	r25, r25
 d2e:	1a 94       	dec	r1
 d30:	69 f7       	brne	.-38     	; 0xd0c <__udivmodsi4_loop>
 d32:	60 95       	com	r22
 d34:	70 95       	com	r23
 d36:	80 95       	com	r24
 d38:	90 95       	com	r25
 d3a:	9b 01       	movw	r18, r22
 d3c:	ac 01       	movw	r20, r24
 d3e:	bd 01       	movw	r22, r26
 d40:	cf 01       	movw	r24, r30
 d42:	08 95       	ret

00000d44 <_exit>:
 d44:	f8 94       	cli

00000d46 <__stop_program>:
 d46:	ff cf       	rjmp	.-2      	; 0xd46 <__stop_program>
